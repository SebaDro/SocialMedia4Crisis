<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC 
 "-//Hibernate/Hibernate Mapping DTD//EN"
 "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <class name="de.hsbo.fbg.sm4c.common.model.Collection" table="collection">
        <meta attribute="class-description">
            This class contains a collection.
        </meta>
        <id name="id" type="long" column="id">
            <generator class="identity"/>
        </id>
        <property name="name" column="name" type="string" unique="true" not-null="true"/>
        <property name="description" column="description" type="string" />
        <property name="creation" column="creation" type="timestamp" />
        <many-to-one name="status" column="statusid" not-null="true" class="de.hsbo.fbg.sm4c.common.model.CollectionStatus" foreign-key="fk_collection_cat_collectionstatus" cascade="none"/>
        <set name="labels" table="collection_label" cascade="save-update" >
            <key column="collectionid" />
            <many-to-many column="labelid" class="de.hsbo.fbg.sm4c.common.model.Label" foreign-key="fk_collection_label_cat_label"/>
        </set>
        <set name="keywords" table="collection_keyword" cascade="save-update"  >
            <key column="collectionid" />
            <many-to-many column="keywordid" class="de.hsbo.fbg.sm4c.common.model.Keyword" foreign-key="fk_collection_keyword_cat_keyword"/>
        </set>
        <set name="services" table="collection_socialmediaservice" cascade="none">
            <key column="collectionid" />
            <many-to-many column="serviceid" class="de.hsbo.fbg.sm4c.common.model.SocialMediaService" foreign-key="fk_collection_socialmediaservice_cat_socialmediaservice"/>
        </set>
        <set name="sources" table="collection_facebooksources" cascade="save-update"  >
            <key column="collectionid" />
            <many-to-many column="sourceid" class="de.hsbo.fbg.sm4c.common.model.FacebookSource" foreign-key="fk_collection_facebooksources_cat_facebooksource"/>
        </set>
        <one-to-one name="model" class="de.hsbo.fbg.sm4c.common.model.Model" cascade="all">
        </one-to-one>
    </class>
    <class name="de.hsbo.fbg.sm4c.common.model.CollectionStatus" table="collectionstatus">
        <meta attribute="class-description">
            This class contains a possible status of a collection.
        </meta>
        <id name="id" type="long" column="id" >
            <generator class="identity"/>
        </id>
        <property name="name" column="name" type="string" unique="true" not-null="true"/>
    </class>
    <class name="de.hsbo.fbg.sm4c.common.model.Keyword" table="keyword">
        <meta attribute="class-description">
            This class contains a keyword of a collection.
        </meta>
        <id name="id" type="long" column="id">
            <generator class="identity"/>
        </id>
        <property name="name" column="name" type="string" unique="true" not-null="true"/>
    </class>
    <class name="de.hsbo.fbg.sm4c.common.model.Label" table="label">
        <meta attribute="class-description">
            This class contains a label of a collection.
        </meta>
        <id name="id" type="long" column="id">
            <generator class="identity"/>
        </id>
        <property name="name" column="name" type="string" unique="true" not-null="true"/>
    </class>
    <class name="de.hsbo.fbg.sm4c.common.model.SocialMediaService" table="socialmediaservice">
        <meta attribute="class-description">
            This class contains a possible Social Media service a collection will be created for.
        </meta>
        <id name="id" type="long" column="id">
            <generator class="identity"/>
        </id>
        <property name="name" column="name" type="string" unique="true" not-null="true"/>
    </class>
    <class name="de.hsbo.fbg.sm4c.common.model.FacebookSource" table="facebooksource" >
        <meta attribute="class-description">
            This class contains a Facebook source for a collection.
        </meta>
        <id name="id" type="long" column="id">
            <generator class="identity"/>
        </id>
        <property name="facebookId" column="facebookid" type="string" unique="true" not-null="true"/>
        <property name="name" column="name" type="string" />
        <property name="description" column="description" type="string" />
        <many-to-one name="type" column="typeid" class="de.hsbo.fbg.sm4c.common.model.SourceType" foreign-key="fk_facebooksource_cat_sourcetype" cascade="save-update" lazy="false" fetch="join"/>
    </class>
    <class name="de.hsbo.fbg.sm4c.common.model.SourceType" table="sourcetype">
        <meta attribute="class-description">
            This class contains a type of a FacebookSource.
        </meta>
        <id name="id" type="long" column="id">
            <generator class="identity"/>
        </id>
        <property name="name" column="name" type="string" unique="true" not-null="true"/>
    </class>
    <class name="de.hsbo.fbg.sm4c.common.model.Model" table="model">
        <meta attribute="class-description">
            This class contains a model for classifying.
        </meta>
        <id name="id" type="long" column="id">
            <generator class="identity"/>
        </id>
        <property name="path" column="path" type="string" unique="true" not-null="true"/>
        <one-to-one name="evaluation" class="de.hsbo.fbg.sm4c.common.model.EvaluationResult" cascade="all">
        </one-to-one>
    </class>
    <class name="de.hsbo.fbg.sm4c.common.model.EvaluationResult" table="evaluation">
        <meta attribute="class-description">
            This class contains the evaluation for a model.
        </meta>
        <id name="id" type="long" column="id">
            <generator class="identity"/>
        </id>
        <property name="summary" column="summary" type="string"/>
        <property name="classDetails" column="classdetails" type="string"/>
        <property name="confusionMatrix" column="confusionmatrix" type="string"/>
    </class>
</hibernate-mapping>
